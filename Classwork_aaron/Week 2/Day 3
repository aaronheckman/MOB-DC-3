text fields:
- Can select keyboard type
- Can make secure for passwords
- Can have text in grey to show use

Using a Playground:
	//My First Program
	let string = "Hello World!"

	/* 
	let is a keyword, 
	it means constant.
	*/


	//My Second Program
	var day = "Wednesday"
	day = "Thursday"

	//Variables are mutable (unlike constants), SWIFT wants you to have constants

	let age: Int = 23
	let implicitAge = 23

	//I am setting a constant named age to an integer that is equal to 23
	//Using a ':' is type casting, onyl accepts integers
	//Int are always whole numbers

	let balance: Float = 10.01
	let gender: Bool = true
	let name: String = "Aaron"

Playground-> View-> Assistant editor to have console in playground
Learning Functions in Playground:

	let name = "Aaronasaconstant"
	println("Aaron")
	println(name)

	var age = 29
	println(age)

	println("My name is \(name) and I am \(age) years old.")

	//  \() escapes and inputs into strings

Arthimetic Operations:
	//Arithmetic Operators

	1+1 //Addition
	2-1
	2*2
	2/2
	10%3

	let x = 5
	let y = 10

	x+y
	x-y
	x*y
	y/x

	var z = 5
	++z //z=z+1
	--z //prefix notation saves a cycle
	--z


	var alpha = 10
	++alpha

	var beta = 5
	--beta

	//Comparisons
	//alpha == beta
	//alpha != beta
	//alpha > beta
	//alpha < beta
	//alpha <= beta
	//alpha >= beta

	//control flow

	let num = -5

	if num > 0 {
	    println("Yes, \(num) is greater than zero")
	} else {
	    println("No, \(num) is not greater than zero")
	    
	}


	let thing = 0
	if thing > 0{
	    println("Yes, \(thing) is greater than zero")
	} else if thing == 0 {
	    println("\(thing) is in fact zero")
	} else {
	    println("](thing) is less than zero")
	}

	var guy = 5

	while guy < 10{
	    println("\(guy) is still less than 10")
	    ++guy
	}

	for i in 1...10 {
	    println("Current iteration is \(i)")
	}



	//Other operators
	// 1..<100
	//1..>100

